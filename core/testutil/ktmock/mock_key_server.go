// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/google/keytransparency/core/api/v1/keytransparency_go_proto (interfaces: KeyTransparencyServer)

// Package ktmock is a generated GoMock package.
package ktmock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	keytransparency_go_proto "github.com/google/keytransparency/core/api/v1/keytransparency_go_proto"
	reflect "reflect"
)

// MockKeyTransparencyServer is a mock of KeyTransparencyServer interface
type MockKeyTransparencyServer struct {
	ctrl     *gomock.Controller
	recorder *MockKeyTransparencyServerMockRecorder
}

// MockKeyTransparencyServerMockRecorder is the mock recorder for MockKeyTransparencyServer
type MockKeyTransparencyServerMockRecorder struct {
	mock *MockKeyTransparencyServer
}

// NewMockKeyTransparencyServer creates a new mock instance
func NewMockKeyTransparencyServer(ctrl *gomock.Controller) *MockKeyTransparencyServer {
	mock := &MockKeyTransparencyServer{ctrl: ctrl}
	mock.recorder = &MockKeyTransparencyServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockKeyTransparencyServer) EXPECT() *MockKeyTransparencyServerMockRecorder {
	return m.recorder
}

// GetDomain mocks base method
func (m *MockKeyTransparencyServer) GetDomain(arg0 context.Context, arg1 *keytransparency_go_proto.GetDomainRequest) (*keytransparency_go_proto.Domain, error) {
	ret := m.ctrl.Call(m, "GetDomain", arg0, arg1)
	ret0, _ := ret[0].(*keytransparency_go_proto.Domain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDomain indicates an expected call of GetDomain
func (mr *MockKeyTransparencyServerMockRecorder) GetDomain(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDomain", reflect.TypeOf((*MockKeyTransparencyServer)(nil).GetDomain), arg0, arg1)
}

// GetEntry mocks base method
func (m *MockKeyTransparencyServer) GetEntry(arg0 context.Context, arg1 *keytransparency_go_proto.GetEntryRequest) (*keytransparency_go_proto.GetEntryResponse, error) {
	ret := m.ctrl.Call(m, "GetEntry", arg0, arg1)
	ret0, _ := ret[0].(*keytransparency_go_proto.GetEntryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEntry indicates an expected call of GetEntry
func (mr *MockKeyTransparencyServerMockRecorder) GetEntry(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntry", reflect.TypeOf((*MockKeyTransparencyServer)(nil).GetEntry), arg0, arg1)
}

// GetEpoch mocks base method
func (m *MockKeyTransparencyServer) GetEpoch(arg0 context.Context, arg1 *keytransparency_go_proto.GetEpochRequest) (*keytransparency_go_proto.Epoch, error) {
	ret := m.ctrl.Call(m, "GetEpoch", arg0, arg1)
	ret0, _ := ret[0].(*keytransparency_go_proto.Epoch)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEpoch indicates an expected call of GetEpoch
func (mr *MockKeyTransparencyServerMockRecorder) GetEpoch(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEpoch", reflect.TypeOf((*MockKeyTransparencyServer)(nil).GetEpoch), arg0, arg1)
}

// GetEpochStream mocks base method
func (m *MockKeyTransparencyServer) GetEpochStream(arg0 *keytransparency_go_proto.GetEpochRequest, arg1 keytransparency_go_proto.KeyTransparency_GetEpochStreamServer) error {
	ret := m.ctrl.Call(m, "GetEpochStream", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetEpochStream indicates an expected call of GetEpochStream
func (mr *MockKeyTransparencyServerMockRecorder) GetEpochStream(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEpochStream", reflect.TypeOf((*MockKeyTransparencyServer)(nil).GetEpochStream), arg0, arg1)
}

// GetLatestEpoch mocks base method
func (m *MockKeyTransparencyServer) GetLatestEpoch(arg0 context.Context, arg1 *keytransparency_go_proto.GetLatestEpochRequest) (*keytransparency_go_proto.Epoch, error) {
	ret := m.ctrl.Call(m, "GetLatestEpoch", arg0, arg1)
	ret0, _ := ret[0].(*keytransparency_go_proto.Epoch)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestEpoch indicates an expected call of GetLatestEpoch
func (mr *MockKeyTransparencyServerMockRecorder) GetLatestEpoch(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestEpoch", reflect.TypeOf((*MockKeyTransparencyServer)(nil).GetLatestEpoch), arg0, arg1)
}

// ListEntryHistory mocks base method
func (m *MockKeyTransparencyServer) ListEntryHistory(arg0 context.Context, arg1 *keytransparency_go_proto.ListEntryHistoryRequest) (*keytransparency_go_proto.ListEntryHistoryResponse, error) {
	ret := m.ctrl.Call(m, "ListEntryHistory", arg0, arg1)
	ret0, _ := ret[0].(*keytransparency_go_proto.ListEntryHistoryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListEntryHistory indicates an expected call of ListEntryHistory
func (mr *MockKeyTransparencyServerMockRecorder) ListEntryHistory(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListEntryHistory", reflect.TypeOf((*MockKeyTransparencyServer)(nil).ListEntryHistory), arg0, arg1)
}

// ListMutations mocks base method
func (m *MockKeyTransparencyServer) ListMutations(arg0 context.Context, arg1 *keytransparency_go_proto.ListMutationsRequest) (*keytransparency_go_proto.ListMutationsResponse, error) {
	ret := m.ctrl.Call(m, "ListMutations", arg0, arg1)
	ret0, _ := ret[0].(*keytransparency_go_proto.ListMutationsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListMutations indicates an expected call of ListMutations
func (mr *MockKeyTransparencyServerMockRecorder) ListMutations(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMutations", reflect.TypeOf((*MockKeyTransparencyServer)(nil).ListMutations), arg0, arg1)
}

// ListMutationsStream mocks base method
func (m *MockKeyTransparencyServer) ListMutationsStream(arg0 *keytransparency_go_proto.ListMutationsRequest, arg1 keytransparency_go_proto.KeyTransparency_ListMutationsStreamServer) error {
	ret := m.ctrl.Call(m, "ListMutationsStream", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListMutationsStream indicates an expected call of ListMutationsStream
func (mr *MockKeyTransparencyServerMockRecorder) ListMutationsStream(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMutationsStream", reflect.TypeOf((*MockKeyTransparencyServer)(nil).ListMutationsStream), arg0, arg1)
}

// UpdateEntry mocks base method
func (m *MockKeyTransparencyServer) UpdateEntry(arg0 context.Context, arg1 *keytransparency_go_proto.UpdateEntryRequest) (*keytransparency_go_proto.UpdateEntryResponse, error) {
	ret := m.ctrl.Call(m, "UpdateEntry", arg0, arg1)
	ret0, _ := ret[0].(*keytransparency_go_proto.UpdateEntryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateEntry indicates an expected call of UpdateEntry
func (mr *MockKeyTransparencyServerMockRecorder) UpdateEntry(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateEntry", reflect.TypeOf((*MockKeyTransparencyServer)(nil).UpdateEntry), arg0, arg1)
}
