// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/keytransparency_v1_proto/keytransparency_v1_admin_proto.proto

package keytransparency_v1_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import trillian "github.com/google/trillian"
import keyspb "github.com/google/trillian/crypto/keyspb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// SetEntriesRequest will update the accounts of the given user_ids to be set to
// user data if those accounts have key_id in their set of authorized_keys.
type BatchUpdateEntriesRequest struct {
	// users is a map from user_ids to user data.
	Users map[string]*UserProfile `protobuf:"bytes,1,rep,name=users" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// app_id is the application to make this change for.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// key_id is the id of the authorized_public key to use when updating accounts.
	// This must be a key that this server has the private key for.
	KeyId string `protobuf:"bytes,3,opt,name=key_id,json=keyId" json:"key_id,omitempty"`
}

func (m *BatchUpdateEntriesRequest) Reset()                    { *m = BatchUpdateEntriesRequest{} }
func (m *BatchUpdateEntriesRequest) String() string            { return proto.CompactTextString(m) }
func (*BatchUpdateEntriesRequest) ProtoMessage()               {}
func (*BatchUpdateEntriesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *BatchUpdateEntriesRequest) GetUsers() map[string]*UserProfile {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *BatchUpdateEntriesRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *BatchUpdateEntriesRequest) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

// BatchUpdateEntriesResponse returns a list of users for which the set operation
// was unsuccessful.
type BatchUpdateEntriesResponse struct {
	// errors is a map from user_ids to errors, if there was an error for that user.
	Errors map[string]string `protobuf:"bytes,1,rep,name=errors" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *BatchUpdateEntriesResponse) Reset()                    { *m = BatchUpdateEntriesResponse{} }
func (m *BatchUpdateEntriesResponse) String() string            { return proto.CompactTextString(m) }
func (*BatchUpdateEntriesResponse) ProtoMessage()               {}
func (*BatchUpdateEntriesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *BatchUpdateEntriesResponse) GetErrors() map[string]string {
	if m != nil {
		return m.Errors
	}
	return nil
}

// Domain contains information on a single domain
type Domain struct {
	DomainId string `protobuf:"bytes,1,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// Log contains the Log-Tree's info.
	Log *trillian.Tree `protobuf:"bytes,2,opt,name=log" json:"log,omitempty"`
	// Map contains the Map-Tree's info.
	Map *trillian.Tree `protobuf:"bytes,3,opt,name=map" json:"map,omitempty"`
	// Vrf contains the VRF public key.
	Vrf *keyspb.PublicKey `protobuf:"bytes,4,opt,name=vrf" json:"vrf,omitempty"`
	// Deleted indicates whether the domain has been deleted.
	Deleted bool `protobuf:"varint,5,opt,name=deleted" json:"deleted,omitempty"`
}

func (m *Domain) Reset()                    { *m = Domain{} }
func (m *Domain) String() string            { return proto.CompactTextString(m) }
func (*Domain) ProtoMessage()               {}
func (*Domain) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Domain) GetDomainId() string {
	if m != nil {
		return m.DomainId
	}
	return ""
}

func (m *Domain) GetLog() *trillian.Tree {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *Domain) GetMap() *trillian.Tree {
	if m != nil {
		return m.Map
	}
	return nil
}

func (m *Domain) GetVrf() *keyspb.PublicKey {
	if m != nil {
		return m.Vrf
	}
	return nil
}

func (m *Domain) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

// ListDomains request.
// No pagination options are provided.
type ListDomainsRequest struct {
	ShowDeleted bool `protobuf:"varint,1,opt,name=show_deleted,json=showDeleted" json:"show_deleted,omitempty"`
}

func (m *ListDomainsRequest) Reset()                    { *m = ListDomainsRequest{} }
func (m *ListDomainsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDomainsRequest) ProtoMessage()               {}
func (*ListDomainsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ListDomainsRequest) GetShowDeleted() bool {
	if m != nil {
		return m.ShowDeleted
	}
	return false
}

type ListDomainsResponse struct {
	Domains []*Domain `protobuf:"bytes,1,rep,name=domains" json:"domains,omitempty"`
}

func (m *ListDomainsResponse) Reset()                    { *m = ListDomainsResponse{} }
func (m *ListDomainsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListDomainsResponse) ProtoMessage()               {}
func (*ListDomainsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ListDomainsResponse) GetDomains() []*Domain {
	if m != nil {
		return m.Domains
	}
	return nil
}

// GetDomainRequest specifies the domain to retrieve information for.
type GetDomainRequest struct {
	DomainId    string `protobuf:"bytes,1,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	ShowDeleted bool   `protobuf:"varint,2,opt,name=show_deleted,json=showDeleted" json:"show_deleted,omitempty"`
}

func (m *GetDomainRequest) Reset()                    { *m = GetDomainRequest{} }
func (m *GetDomainRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDomainRequest) ProtoMessage()               {}
func (*GetDomainRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *GetDomainRequest) GetDomainId() string {
	if m != nil {
		return m.DomainId
	}
	return ""
}

func (m *GetDomainRequest) GetShowDeleted() bool {
	if m != nil {
		return m.ShowDeleted
	}
	return false
}

// GetDomainResponse contains the configuration info for one domain.
type GetDomainResponse struct {
	Domain *Domain `protobuf:"bytes,1,opt,name=domain" json:"domain,omitempty"`
}

func (m *GetDomainResponse) Reset()                    { *m = GetDomainResponse{} }
func (m *GetDomainResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDomainResponse) ProtoMessage()               {}
func (*GetDomainResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *GetDomainResponse) GetDomain() *Domain {
	if m != nil {
		return m.Domain
	}
	return nil
}

// CreateDomainRequest creates a new domain
type CreateDomainRequest struct {
	DomainId string `protobuf:"bytes,1,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
}

func (m *CreateDomainRequest) Reset()                    { *m = CreateDomainRequest{} }
func (m *CreateDomainRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDomainRequest) ProtoMessage()               {}
func (*CreateDomainRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *CreateDomainRequest) GetDomainId() string {
	if m != nil {
		return m.DomainId
	}
	return ""
}

// CreateDomainResponse contains the confiugration info for the new domain.
type CreateDomainResponse struct {
	Domain *Domain `protobuf:"bytes,1,opt,name=domain" json:"domain,omitempty"`
}

func (m *CreateDomainResponse) Reset()                    { *m = CreateDomainResponse{} }
func (m *CreateDomainResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateDomainResponse) ProtoMessage()               {}
func (*CreateDomainResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *CreateDomainResponse) GetDomain() *Domain {
	if m != nil {
		return m.Domain
	}
	return nil
}

// DeleteDomainRequest deletes a domain
type DeleteDomainRequest struct {
	DomainId string `protobuf:"bytes,1,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
}

func (m *DeleteDomainRequest) Reset()                    { *m = DeleteDomainRequest{} }
func (m *DeleteDomainRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteDomainRequest) ProtoMessage()               {}
func (*DeleteDomainRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *DeleteDomainRequest) GetDomainId() string {
	if m != nil {
		return m.DomainId
	}
	return ""
}

// DeleteDomainResponse contains the confiugration info for the new domain.
type DeleteDomainResponse struct {
	Domain *Domain `protobuf:"bytes,1,opt,name=domain" json:"domain,omitempty"`
}

func (m *DeleteDomainResponse) Reset()                    { *m = DeleteDomainResponse{} }
func (m *DeleteDomainResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteDomainResponse) ProtoMessage()               {}
func (*DeleteDomainResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *DeleteDomainResponse) GetDomain() *Domain {
	if m != nil {
		return m.Domain
	}
	return nil
}

// UndeleteDomainRequest deletes a domain
type UndeleteDomainRequest struct {
	DomainId string `protobuf:"bytes,1,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
}

func (m *UndeleteDomainRequest) Reset()                    { *m = UndeleteDomainRequest{} }
func (m *UndeleteDomainRequest) String() string            { return proto.CompactTextString(m) }
func (*UndeleteDomainRequest) ProtoMessage()               {}
func (*UndeleteDomainRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *UndeleteDomainRequest) GetDomainId() string {
	if m != nil {
		return m.DomainId
	}
	return ""
}

// UndeleteDomainResponse contains the confiugration info for the new domain.
type UndeleteDomainResponse struct {
	Domain *Domain `protobuf:"bytes,1,opt,name=domain" json:"domain,omitempty"`
}

func (m *UndeleteDomainResponse) Reset()                    { *m = UndeleteDomainResponse{} }
func (m *UndeleteDomainResponse) String() string            { return proto.CompactTextString(m) }
func (*UndeleteDomainResponse) ProtoMessage()               {}
func (*UndeleteDomainResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *UndeleteDomainResponse) GetDomain() *Domain {
	if m != nil {
		return m.Domain
	}
	return nil
}

func init() {
	proto.RegisterType((*BatchUpdateEntriesRequest)(nil), "keytransparency.v1.proto.BatchUpdateEntriesRequest")
	proto.RegisterType((*BatchUpdateEntriesResponse)(nil), "keytransparency.v1.proto.BatchUpdateEntriesResponse")
	proto.RegisterType((*Domain)(nil), "keytransparency.v1.proto.Domain")
	proto.RegisterType((*ListDomainsRequest)(nil), "keytransparency.v1.proto.ListDomainsRequest")
	proto.RegisterType((*ListDomainsResponse)(nil), "keytransparency.v1.proto.ListDomainsResponse")
	proto.RegisterType((*GetDomainRequest)(nil), "keytransparency.v1.proto.GetDomainRequest")
	proto.RegisterType((*GetDomainResponse)(nil), "keytransparency.v1.proto.GetDomainResponse")
	proto.RegisterType((*CreateDomainRequest)(nil), "keytransparency.v1.proto.CreateDomainRequest")
	proto.RegisterType((*CreateDomainResponse)(nil), "keytransparency.v1.proto.CreateDomainResponse")
	proto.RegisterType((*DeleteDomainRequest)(nil), "keytransparency.v1.proto.DeleteDomainRequest")
	proto.RegisterType((*DeleteDomainResponse)(nil), "keytransparency.v1.proto.DeleteDomainResponse")
	proto.RegisterType((*UndeleteDomainRequest)(nil), "keytransparency.v1.proto.UndeleteDomainRequest")
	proto.RegisterType((*UndeleteDomainResponse)(nil), "keytransparency.v1.proto.UndeleteDomainResponse")
}

func init() {
	proto.RegisterFile("proto/keytransparency_v1_proto/keytransparency_v1_admin_proto.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 555 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x51, 0x6f, 0x12, 0x41,
	0x10, 0xc7, 0x73, 0x20, 0xb4, 0x0c, 0xa6, 0x69, 0xb7, 0xad, 0x39, 0xf1, 0x05, 0xcf, 0x98, 0xf0,
	0x74, 0xa4, 0x68, 0x62, 0xad, 0xd1, 0x98, 0xb6, 0xa4, 0x21, 0x6a, 0x82, 0x97, 0x92, 0x18, 0x5f,
	0xc8, 0x72, 0x37, 0x85, 0x0b, 0xc7, 0xed, 0xba, 0xb7, 0x60, 0xee, 0xcd, 0x8f, 0xe3, 0xab, 0xdf,
	0xd0, 0xec, 0xed, 0x82, 0x80, 0x5c, 0x53, 0xd2, 0xbe, 0xdc, 0xed, 0xce, 0xcc, 0xff, 0x9f, 0xdf,
	0xcc, 0x6e, 0x16, 0x2e, 0xb8, 0x60, 0x92, 0x35, 0xc7, 0x98, 0x4a, 0x41, 0xe3, 0x84, 0x53, 0x81,
	0xb1, 0x9f, 0xf6, 0x67, 0x27, 0xfd, 0xdc, 0x04, 0x0d, 0x26, 0x61, 0xac, 0xd3, 0x6e, 0xf6, 0x25,
	0xf6, 0x5a, 0x95, 0x3b, 0x3b, 0xd1, 0x99, 0xda, 0x9e, 0x14, 0x61, 0x14, 0x85, 0x34, 0x36, 0xfb,
	0x9a, 0x2f, 0x52, 0xae, 0x6d, 0x13, 0x3e, 0x30, 0x3f, 0x93, 0x7b, 0xbf, 0x3d, 0xca, 0x12, 0x84,
	0xf3, 0xab, 0x00, 0x4f, 0xcf, 0xa9, 0xf4, 0x47, 0x3d, 0x1e, 0x50, 0x89, 0xed, 0x58, 0x8a, 0x10,
	0x13, 0x0f, 0x7f, 0x4c, 0x31, 0x91, 0xe4, 0x1a, 0x4a, 0xd3, 0x04, 0x45, 0x62, 0x5b, 0xf5, 0x62,
	0xa3, 0xda, 0xfa, 0xe0, 0xe6, 0x21, 0xbb, 0xb9, 0x1e, 0x6e, 0x4f, 0x19, 0xa8, 0x58, 0xea, 0x69,
	0x33, 0x72, 0x0c, 0x65, 0xca, 0x79, 0x3f, 0x0c, 0xec, 0x42, 0xdd, 0x6a, 0x54, 0xbc, 0x12, 0xe5,
	0xbc, 0x13, 0xa8, 0xf0, 0x18, 0x53, 0x15, 0x2e, 0xea, 0xf0, 0x18, 0xd3, 0x4e, 0x50, 0xeb, 0x03,
	0xfc, 0xb3, 0x20, 0xfb, 0x50, 0x1c, 0x63, 0x6a, 0x5b, 0x59, 0x85, 0x5a, 0x92, 0x77, 0x50, 0x9a,
	0xd1, 0x68, 0x8a, 0x99, 0x59, 0xb5, 0xf5, 0x32, 0x9f, 0x51, 0xd9, 0x74, 0x05, 0xbb, 0x09, 0x23,
	0xf4, 0xb4, 0xe6, 0xac, 0x70, 0x6a, 0x39, 0x7f, 0x2c, 0xa8, 0x6d, 0xc2, 0x4f, 0x38, 0x8b, 0x13,
	0x24, 0xdf, 0xa0, 0x8c, 0x42, 0xb0, 0xc5, 0x10, 0x3e, 0x6e, 0x37, 0x04, 0xed, 0xe2, 0xb6, 0x33,
	0x0b, 0x3d, 0x06, 0xe3, 0x57, 0x7b, 0x0b, 0xd5, 0xa5, 0xf0, 0x86, 0xd6, 0x8e, 0x96, 0x5b, 0xab,
	0x2c, 0x33, 0xff, 0xb6, 0xa0, 0x7c, 0xc9, 0x26, 0x34, 0x8c, 0xc9, 0x33, 0xa8, 0x04, 0xd9, 0x4a,
	0x4d, 0x4e, 0x8b, 0x77, 0x75, 0xa0, 0x13, 0x90, 0x3a, 0x14, 0x23, 0x36, 0x34, 0xa3, 0xd9, 0x73,
	0x17, 0xf7, 0xea, 0x5a, 0x20, 0x7a, 0x2a, 0xa5, 0x2a, 0x26, 0x94, 0x67, 0x23, 0xdf, 0x50, 0x31,
	0xa1, 0x9c, 0xbc, 0x80, 0xe2, 0x4c, 0xdc, 0xd8, 0x8f, 0xb2, 0x8a, 0x03, 0xd7, 0xdc, 0xbe, 0xee,
	0x74, 0x10, 0x85, 0xfe, 0x27, 0x4c, 0x3d, 0x95, 0x25, 0x36, 0xec, 0x04, 0x18, 0xa1, 0xc4, 0xc0,
	0x2e, 0xd5, 0xad, 0xc6, 0xae, 0x37, 0xdf, 0x3a, 0x6f, 0x80, 0x7c, 0x0e, 0x13, 0xa9, 0x69, 0x17,
	0x37, 0xeb, 0x39, 0x3c, 0x4e, 0x46, 0xec, 0x67, 0x7f, 0x2e, 0xb2, 0x32, 0x51, 0x55, 0xc5, 0x2e,
	0x8d, 0xf0, 0x2b, 0x1c, 0xae, 0x08, 0xcd, 0x79, 0x9c, 0xc1, 0x8e, 0x6e, 0x6f, 0x7e, 0x20, 0xf5,
	0xfc, 0x03, 0xd1, 0x5a, 0x6f, 0x2e, 0x70, 0x3c, 0xd8, 0xbf, 0x42, 0xe3, 0x38, 0x27, 0xb9, 0x75,
	0x7e, 0xeb, 0x98, 0x85, 0xff, 0x31, 0xbf, 0xc0, 0xc1, 0x92, 0xa7, 0x81, 0x3c, 0x85, 0xb2, 0xf6,
	0xc8, 0x1c, 0xef, 0xc2, 0x68, 0xea, 0x9d, 0x16, 0x1c, 0x5e, 0x08, 0xa4, 0x12, 0xef, 0x4e, 0xe9,
	0x74, 0xe1, 0x68, 0x55, 0xf3, 0x10, 0x14, 0xba, 0xbf, 0xed, 0x28, 0x56, 0x35, 0xf7, 0xa6, 0x78,
	0x0d, 0xc7, 0xbd, 0x38, 0xd8, 0x96, 0xc3, 0x83, 0x27, 0xeb, 0xaa, 0xfb, 0x92, 0x9c, 0x5f, 0x7d,
	0x6f, 0x0f, 0x43, 0x39, 0x9a, 0x0e, 0x5c, 0x9f, 0x4d, 0x9a, 0x43, 0xc6, 0x86, 0x11, 0xae, 0x3f,
	0xad, 0x4d, 0x9f, 0x09, 0x6c, 0xde, 0xfe, 0xea, 0x0e, 0xca, 0xd9, 0xef, 0xd5, 0xdf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x2d, 0x76, 0x28, 0x82, 0x42, 0x06, 0x00, 0x00,
}
