// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/monitor_v1_proto/monitor_v1_proto.proto

/*
Package monitor_v1_proto is a generated protocol buffer package.

Key Transparency Monitor Service


It is generated from these files:
	proto/monitor_v1_proto/monitor_v1_proto.proto

It has these top-level messages:
	GetMonitoringRequest
	GetMonitoringResponse
*/
package monitor_v1_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_keytransparency_v1 "github.com/google/keytransparency/core/api/v1/keytransparency_proto"
import trillian "github.com/google/trillian"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// GetMonitoringRequest contains the input parameters of the GetMonitoring APIs.
type GetMonitoringRequest struct {
	// epoch specifies the for which the monitoring results will
	// be returned (epochs start at 1).
	Epoch int64 `protobuf:"varint,1,opt,name=epoch" json:"epoch,omitempty"`
	// kt_URL is the URL of the keytransparency server for which the monitoring
	// result will be returned.
	Kt_URL string `protobuf:"bytes,2,opt,name=kt_URL,json=ktURL" json:"kt_URL,omitempty"`
}

func (m *GetMonitoringRequest) Reset()                    { *m = GetMonitoringRequest{} }
func (m *GetMonitoringRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMonitoringRequest) ProtoMessage()               {}
func (*GetMonitoringRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetMonitoringRequest) GetEpoch() int64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *GetMonitoringRequest) GetKt_URL() string {
	if m != nil {
		return m.Kt_URL
	}
	return ""
}

type GetMonitoringResponse struct {
	// smr contains the map root for the sparse Merkle Tree signed with the
	// monitor's key on success. If the checks were not successful the
	// smr will be empty. The epochs are encoded into the smr map_revision.
	Smr *trillian.SignedMapRoot `protobuf:"bytes,1,opt,name=smr" json:"smr,omitempty"`
	// seen_timestamp_nanos contains the time in nanoseconds where this particular
	// signed map root was retrieved and processed. The actual timestamp of the
	// smr returned by the server is contained in above smr field.
	SeenTimestampNanos int64 `protobuf:"varint,2,opt,name=seen_timestamp_nanos,json=seenTimestampNanos" json:"seen_timestamp_nanos,omitempty"`
	// errors contains a list of error string representing the verification checks
	// that failed while monitoring the key-transparency server.
	Errors []string `protobuf:"bytes,3,rep,name=errors" json:"errors,omitempty"`
	// error_data contains the original response from the mutations API if and
	// only if at least one verification step failed. It can be used to re-run the
	// verification steps.
	ErrorData *google_keytransparency_v1.GetMutationsResponse `protobuf:"bytes,4,opt,name=error_data,json=errorData" json:"error_data,omitempty"`
}

func (m *GetMonitoringResponse) Reset()                    { *m = GetMonitoringResponse{} }
func (m *GetMonitoringResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMonitoringResponse) ProtoMessage()               {}
func (*GetMonitoringResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetMonitoringResponse) GetSmr() *trillian.SignedMapRoot {
	if m != nil {
		return m.Smr
	}
	return nil
}

func (m *GetMonitoringResponse) GetSeenTimestampNanos() int64 {
	if m != nil {
		return m.SeenTimestampNanos
	}
	return 0
}

func (m *GetMonitoringResponse) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *GetMonitoringResponse) GetErrorData() *google_keytransparency_v1.GetMutationsResponse {
	if m != nil {
		return m.ErrorData
	}
	return nil
}

func init() {
	proto.RegisterType((*GetMonitoringRequest)(nil), "monitor.v1.proto.GetMonitoringRequest")
	proto.RegisterType((*GetMonitoringResponse)(nil), "monitor.v1.proto.GetMonitoringResponse")
}

func init() { proto.RegisterFile("proto/monitor_v1_proto/monitor_v1_proto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x31, 0x4f, 0xfb, 0x30,
	0x10, 0xc5, 0x95, 0x7f, 0xfe, 0xad, 0x54, 0x23, 0x21, 0x64, 0xb5, 0x10, 0x31, 0x55, 0x9d, 0xca,
	0x40, 0x42, 0xca, 0x8c, 0x90, 0x00, 0x89, 0xa5, 0xed, 0x60, 0xe8, 0xc2, 0x12, 0xb9, 0xe9, 0x29,
	0xb5, 0xda, 0xf8, 0x8c, 0x7d, 0x8d, 0xd4, 0xef, 0xca, 0x87, 0x41, 0x71, 0x52, 0x86, 0xa8, 0x8b,
	0xed, 0x7b, 0xcf, 0xfe, 0xbd, 0xd3, 0x99, 0xdd, 0x1b, 0x8b, 0x84, 0x49, 0x89, 0x5a, 0x11, 0xda,
	0xac, 0x4a, 0xb3, 0xf3, 0x42, 0xec, 0x57, 0x7e, 0xd5, 0xea, 0x71, 0x95, 0x36, 0xca, 0xed, 0x4c,
	0x1a, 0x95, 0x54, 0x69, 0xb2, 0x83, 0x23, 0x59, 0xa9, 0x9d, 0x91, 0x16, 0x74, 0x7e, 0x6c, 0x31,
	0x1d, 0xb5, 0x7d, 0x73, 0x49, 0x56, 0xed, 0xf7, 0x4a, 0xea, 0xa6, 0x9e, 0xbc, 0xb2, 0xe1, 0x3b,
	0xd0, 0xa2, 0x41, 0x2b, 0x5d, 0x08, 0xf8, 0x3e, 0x80, 0x23, 0x3e, 0x64, 0x3d, 0x30, 0x98, 0x6f,
	0xa3, 0x60, 0x1c, 0x4c, 0x43, 0xd1, 0x14, 0x7c, 0xc4, 0xfa, 0x3b, 0xca, 0x56, 0x62, 0x1e, 0xfd,
	0x1b, 0x07, 0xd3, 0x81, 0xe8, 0xed, 0x68, 0x25, 0xe6, 0x93, 0x9f, 0x80, 0x8d, 0x3a, 0x14, 0x67,
	0x50, 0x3b, 0xe0, 0x77, 0x2c, 0x74, 0xa5, 0xf5, 0x90, 0x8b, 0xd9, 0x4d, 0xfc, 0x17, 0xfe, 0xa1,
	0x0a, 0x0d, 0x9b, 0x85, 0x34, 0x02, 0x91, 0x44, 0x7d, 0x87, 0x3f, 0xb0, 0xa1, 0x03, 0xd0, 0x19,
	0xa9, 0x12, 0x1c, 0xc9, 0xd2, 0x64, 0x5a, 0x6a, 0x74, 0x3e, 0x29, 0x14, 0xbc, 0xf6, 0x3e, 0x4f,
	0xd6, 0xb2, 0x76, 0xf8, 0x35, 0xeb, 0x83, 0xb5, 0x68, 0x5d, 0x14, 0x8e, 0xc3, 0xe9, 0x40, 0xb4,
	0x15, 0x5f, 0x32, 0xe6, 0x4f, 0xd9, 0x46, 0x92, 0x8c, 0xfe, 0xfb, 0xec, 0x24, 0x2e, 0x10, 0x8b,
	0x3d, 0xc4, 0xdd, 0xb1, 0x54, 0x69, 0x5c, 0xb7, 0x7e, 0x20, 0x49, 0x0a, 0xb5, 0x3b, 0x75, 0x2e,
	0x06, 0x1e, 0xf1, 0x26, 0x49, 0xbe, 0x3c, 0x7f, 0x3d, 0x15, 0x8a, 0xb6, 0x87, 0x75, 0x9c, 0x63,
	0x99, 0x34, 0x9c, 0xee, 0x78, 0x93, 0x1c, 0x2d, 0x24, 0xe7, 0x3f, 0x70, 0xdd, 0xf7, 0xdb, 0xe3,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x67, 0x81, 0x35, 0xf2, 0x01, 0x00, 0x00,
}
