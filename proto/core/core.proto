// Copyright 2015 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.security.e2ekeys.core;

option java_package = "com.google.security.e2ekeys.core";
option java_multiple_files = true;
option java_outer_classname = "E2EKeysProto";

import "github.com/google/e2e-key-server/proto/v2/e2ekeys.proto";

// Internal types for the End to End Key Server.

// EntryStorage is what gets serialized to disk / log.
message EntryStorage {
  // commitment_timestamp is a sequential update number of the SignedEntryUpdate.
  uint64 commitment_timestamp = 1;
  // entry_update contains a serialized SignedEntryUpdate with the actual update
  // contents.
  bytes signed_entry_update = 2;
  // profile is the serialized protobuf Profile.
  // profile is private and must not be released to verifiers.
  bytes profile = 3;
  // profile_nonce is at least 16 random bytes.
  bytes profile_nonce = 4;
  // domain allows servers to keep track of multiple trees at once.
  string domain = 5;
}

// DomainInfo is the information that need to be baked into an application
// in order to verify information for a domain.
message DomainInfo {
  repeated v2.PublicKey public_keys = 1;
  // required_sigs is the number of valid signatures to require out of
  // public_keys before considering signed_tree heads legitimate.
  uint32 required_sigs = 2;
  // domain is the doman suffix to use when resolving a user_id to a domain.
  string domain = 3;
  // api_url is the url prefix to use when querying users on this domain.
  string api_url = 4;
}

message VerifierInfo {
  repeated v2.PublicKey public_keys = 1;
  // required_sigs is the number of valid signatures to require out of
  // public_keys before considering signed_tree heads legitimate.
  uint32 required_sigs = 2;
  // api_url is the url prefix to use when querying users on this domain.
  string api_url = 4;
  // domain is the doman suffix that this verifier is responsible for.
  string domain = 3;
}
