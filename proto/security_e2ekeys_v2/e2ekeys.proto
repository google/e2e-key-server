// Copyright 2016 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package security.e2ekeys.v2;

import "github.com/google/e2e-key-server/proto/security_e2ekeys/e2ekeytypes.proto";
import "google/api/annotations.proto";


// The E2EKeyService API represents a directory of public keys.
// The API defines the following resource model:
//
// - The API has a collection of  [Entry][security.e2ekeys.Entry]
//   resources named `/entries/*`.
//
// - Entries have a collection of historical
//   [Entry][security.e2ekeys.Entry] resources named
//   `/entries/*/history`.
//
service E2EKeyService {
  // GetEntry returns a user's entry in the Merkle Tree. Entries contain
  // signed commitments to a profile, which is also returned.
  rpc GetEntry(GetEntryRequest) returns (GetEntryResponse) {
    option (google.api.http) = { get: "/v2/users/{user_id}" };
  }

  // ListEntryHistory returns a list of GetEntryRespons covering several epochs.
  rpc ListEntryHistory(ListEntryHistoryRequest) returns (ListEntryHistoryResponse) {
    option (google.api.http) = { get: "/v2/users/{user_id}/history" };
  }

  // blocking or polling?
  // UpdateEntry submits a SignedEntryUpdate.  Returns empty until this update
  // has been included in an epoch.  Clients must retry until this function
  // returns a proof.
  rpc UpdateEntry(UpdateEntryRequest) returns (UpdateEntryResponse) {
    option (google.api.http) = {
      put: "/v2/users/{user_id}"
      body: "entry_update"
    };
  }

/*
  // List the Signed Epoch Heads, from epoch to epoch.
  rpc ListSEH(ListSEHRequest) returns (ListSEHResponse);

  // List the EntryUpdates by update number.
  rpc ListUpdate(ListUpdateRequest) returns (ListUpdateResponse);

  // ListSteps combines SEH and EntryUpdates into single list.
  rpc ListSteps(ListStepsRequest) returns (ListStepsResponse);
*/
}
