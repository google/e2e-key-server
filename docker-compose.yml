version: "3.1"
secrets:
  server.key:
    file: ./genfiles/server.key
  server.crt:
    file: ./genfiles/server.crt
  monitor.key:
    file: ./genfiles/monitor_sign-key.pem

services:
  # Only works when when replicas = 1 for reach monitored service.
  # Kubernetes sidecars are needed for replicas > 1. 
  prometheus-to-sd:
    container_name: prometheus-to-sd
    image: gcr.io/google-containers/prometheus-to-sd:v0.2.6
    entrypoint:
      - /monitor
      - --stackdriver-prefix=custom.googleapis.com
      - --source=logserver:http://log-server:8091/metrics
      - --source=logsigner:http://log-signer:8091/metrics
      - --source=mapserver:http://map-server:8091/metrics
      - --source=keyserver:http://server:8081/metrics
      - --source=sequencer:http://sequencer:8081/metrics
      - --pod-id=prometheus-to-sd
      - --namespace-id=default
      - --metrics-resolution=5s

  prometheus:
    depends_on:
      - server
      - sequencer
    image: gcr.io/key-transparency/prometheus:${TRAVIS_COMMIT}
    build:
      context: .
      dockerfile: deploy/prometheus/Dockerfile
    restart: always
    ports:
      - 9090:9090

  db:
    image: gcr.io/trillian-opensource-ci/db_server:latest
    restart: always
    ports:
      - "3306"
    environment:
      MYSQL_PASSWORD: zaphod
      MYSQL_USER: test
      MYSQL_DATABASE: test

  log-server:
    depends_on:
      - db
    image: gcr.io/trillian-opensource-ci/log_server:latest
    restart: always
    command: 
      - --mysql_uri=test:zaphod@tcp(db:3306)/test
      - --rpc_endpoint=0.0.0.0:8090
      - --http_endpoint=0.0.0.0:8091
      - --alsologtostderr
    ports:
      - "8090"
      - "8091"

  log-signer:
    depends_on:
      - db
    image: gcr.io/trillian-opensource-ci/log_signer:latest
    restart: always
    command:
      - --mysql_uri=test:zaphod@tcp(db:3306)/test
      - --http_endpoint=0.0.0.0:8091
      - --sequencer_guard_window=0s
      - --sequencer_interval=1s
      - --num_sequencers=1
      - --batch_size=50
      - --force_master=true
      - --alsologtostderr
    ports:
      - "8091"

  map-server:
    depends_on:
      - db
    image: gcr.io/trillian-opensource-ci/map_server:latest
    restart: always
    command:
      - --mysql_uri=test:zaphod@tcp(db:3306)/test
      - --rpc_endpoint=0.0.0.0:8090
      - --http_endpoint=0.0.0.0:8091
      - --alsologtostderr
    ports:
      - "8090"
      - "8091"

  server:
    depends_on:
      - db
      - log-server
      - map-server
    image: gcr.io/key-transparency/keytransparency-server:${TRAVIS_COMMIT}
    build:
      context: .
      dockerfile: ./cmd/keytransparency-server/Dockerfile
    restart: always
    ports:
      - "443:8080" # json & grpc
      - "8081:8081" # metrics
    command:
      - --addr=0.0.0.0:8080
      - --db=test:zaphod@tcp(db:3306)/test
      - --log-url=log-server:8090
      - --map-url=map-server:8090
      - --tls-key=/run/secrets/server.key
      - --tls-cert=/run/secrets/server.crt
      - --auth-type=insecure-fake
      - --alsologtostderr
      - --v=1
    labels:
      kompose.service.type: LoadBalancer
    secrets:
      - server.key
      - server.crt

  sequencer:
    depends_on:
      - db
      - log-server
      - map-server
    image: gcr.io/key-transparency/keytransparency-sequencer:${TRAVIS_COMMIT}
    build:
      context: .
      dockerfile: ./cmd/keytransparency-sequencer/Dockerfile
    restart: always
    command:
      - --force_master
      - --db=test:zaphod@tcp(db:3306)/test
      - --addr=0.0.0.0:8080
      - --log-url=log-server:8090
      - --map-url=map-server:8090
      - --tls-key=/run/secrets/server.key
      - --tls-cert=/run/secrets/server.crt
      - --alsologtostderr
      - --v=5
    ports:
      - "8080"
      - "8081"
    secrets:
      - server.key
      - server.crt

  init:
    image: gcr.io/key-transparency/init:latest
    restart: "on-failure"
    deploy:
      restart_policy:
        condition: on-failure
    build:
      context: .
      dockerfile: ./deploy/docker/init/Dockerfile
    depends_on:
      - sequencer
    command:  sequencer:8080 -- curl -k https://sequencer:8080/v1/directories -d'{"directory_id":"default","min_interval":"1s","max_interval":"60s"}'

  monitor:
    depends_on:
      - server
      - sequencer
    image: gcr.io/key-transparency/keytransparency-monitor:${TRAVIS_COMMIT}
    build:
      context: .
      dockerfile: ./cmd/keytransparency-monitor/Dockerfile
    command:
      - --addr=0.0.0.0:8099
      - --kt-url=server:8080
      - --insecure
      - --directoryid=default
      - --tls-key=/run/secrets/server.key
      - --tls-cert=/run/secrets/server.crt
      - --sign-key=/run/secrets/monitor.key
      - --password=towel
      - --alsologtostderr
      - --v=3
    restart: always
    ports:
    - "8099:8099" # gRPC / HTTPS
    secrets:
      - server.key
      - server.crt
      - monitor.key
