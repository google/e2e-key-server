// Code generated by protoc-gen-go. DO NOT EDIT.
// source: authz.proto

/*
Package authz_proto is a generated protocol buffer package.

It is generated from these files:
	authz.proto

It has these top-level messages:
	AuthorizationPolicy
*/
package authz_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_keytransparency_type "github.com/google/keytransparency/core/api/type/type_go_proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// AuthorizationPolicy contains an authorization policy.
type AuthorizationPolicy struct {
	// roles is a map of roles keyed by labels used in RoleLabels.
	Roles map[string]*AuthorizationPolicy_Role `protobuf:"bytes,2,rep,name=roles" json:"roles,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// resource_to_role_labels specifies the authorization policy keyed by resource
	// map_id|app_id concatenation as a string.
	ResourceToRoleLabels map[string]*AuthorizationPolicy_RoleLabels `protobuf:"bytes,3,rep,name=resource_to_role_labels,json=resourceToRoleLabels" json:"resource_to_role_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *AuthorizationPolicy) Reset()                    { *m = AuthorizationPolicy{} }
func (m *AuthorizationPolicy) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationPolicy) ProtoMessage()               {}
func (*AuthorizationPolicy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AuthorizationPolicy) GetRoles() map[string]*AuthorizationPolicy_Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *AuthorizationPolicy) GetResourceToRoleLabels() map[string]*AuthorizationPolicy_RoleLabels {
	if m != nil {
		return m.ResourceToRoleLabels
	}
	return nil
}

// Resource contains the resource being accessed.
type AuthorizationPolicy_Resource struct {
	// map_id contains the Key Transparency map identity for this entry.
	DomainId string `protobuf:"bytes,1,opt,name=domain_id,json=domainId" json:"domain_id,omitempty"`
	// app_id contains the application identity for this entry.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (m *AuthorizationPolicy_Resource) Reset()                    { *m = AuthorizationPolicy_Resource{} }
func (m *AuthorizationPolicy_Resource) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationPolicy_Resource) ProtoMessage()               {}
func (*AuthorizationPolicy_Resource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *AuthorizationPolicy_Resource) GetDomainId() string {
	if m != nil {
		return m.DomainId
	}
	return ""
}

func (m *AuthorizationPolicy_Resource) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

// Role contains a specific identity of an authorization entry.
type AuthorizationPolicy_Role struct {
	// principals contains an application specific identifier for this entry.
	Principals []string `protobuf:"bytes,1,rep,name=principals" json:"principals,omitempty"`
	// permissions contains the set of permissions this role is granted.
	Permissions []google_keytransparency_type.Permission `protobuf:"varint,2,rep,packed,name=permissions,enum=google.keytransparency.type.Permission" json:"permissions,omitempty"`
}

func (m *AuthorizationPolicy_Role) Reset()                    { *m = AuthorizationPolicy_Role{} }
func (m *AuthorizationPolicy_Role) String() string            { return proto.CompactTextString(m) }
func (*AuthorizationPolicy_Role) ProtoMessage()               {}
func (*AuthorizationPolicy_Role) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *AuthorizationPolicy_Role) GetPrincipals() []string {
	if m != nil {
		return m.Principals
	}
	return nil
}

func (m *AuthorizationPolicy_Role) GetPermissions() []google_keytransparency_type.Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

// RoleLabels contains a lot of role labels identifying each role.
type AuthorizationPolicy_RoleLabels struct {
	Labels []string `protobuf:"bytes,1,rep,name=labels" json:"labels,omitempty"`
}

func (m *AuthorizationPolicy_RoleLabels) Reset()         { *m = AuthorizationPolicy_RoleLabels{} }
func (m *AuthorizationPolicy_RoleLabels) String() string { return proto.CompactTextString(m) }
func (*AuthorizationPolicy_RoleLabels) ProtoMessage()    {}
func (*AuthorizationPolicy_RoleLabels) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 2}
}

func (m *AuthorizationPolicy_RoleLabels) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func init() {
	proto.RegisterType((*AuthorizationPolicy)(nil), "google.keytransparency.impl.AuthorizationPolicy")
	proto.RegisterType((*AuthorizationPolicy_Resource)(nil), "google.keytransparency.impl.AuthorizationPolicy.Resource")
	proto.RegisterType((*AuthorizationPolicy_Role)(nil), "google.keytransparency.impl.AuthorizationPolicy.Role")
	proto.RegisterType((*AuthorizationPolicy_RoleLabels)(nil), "google.keytransparency.impl.AuthorizationPolicy.RoleLabels")
}

func init() { proto.RegisterFile("authz.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 399 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x5f, 0xcb, 0xd3, 0x30,
	0x14, 0xc6, 0xe9, 0x6a, 0xc7, 0xbb, 0x53, 0x10, 0x89, 0xff, 0xfa, 0xf6, 0x05, 0x19, 0x22, 0xb8,
	0xab, 0x14, 0x26, 0x82, 0x28, 0x88, 0x0e, 0xbc, 0x98, 0x7a, 0xb1, 0x15, 0xaf, 0xbc, 0x29, 0x59,
	0x1b, 0xb6, 0xb0, 0xb4, 0x27, 0xa6, 0xa9, 0xd0, 0xdd, 0x09, 0x7e, 0x2d, 0xbf, 0x9b, 0xa4, 0xa9,
	0xb3, 0xca, 0x26, 0xb8, 0xab, 0x36, 0xe7, 0xe4, 0xfc, 0x9e, 0xf3, 0x9c, 0x24, 0x10, 0xb2, 0xc6,
	0xec, 0x0e, 0x54, 0x69, 0x34, 0x48, 0x6e, 0xb6, 0x88, 0x5b, 0xc9, 0xe9, 0x9e, 0xb7, 0x46, 0xb3,
	0xaa, 0x56, 0x4c, 0xf3, 0x2a, 0x6f, 0xa9, 0x28, 0x95, 0x8c, 0xaf, 0x73, 0xd4, 0x3c, 0x61, 0x4a,
	0x24, 0xa6, 0x55, 0x3c, 0x19, 0xd4, 0x3d, 0xfe, 0x11, 0xc0, 0xdd, 0xb7, 0x8d, 0xd9, 0xa1, 0x16,
	0x07, 0x66, 0x04, 0x56, 0x2b, 0x94, 0x22, 0x6f, 0xc9, 0x1a, 0x02, 0x8d, 0x92, 0xd7, 0xd1, 0x68,
	0xea, 0xcf, 0xc2, 0xf9, 0x2b, 0xfa, 0x0f, 0x3e, 0x3d, 0x01, 0xa0, 0xa9, 0xad, 0x7e, 0x57, 0x19,
	0xdd, 0xa6, 0x8e, 0x44, 0xbe, 0x79, 0xf0, 0x50, 0xf3, 0x1a, 0x1b, 0x9d, 0xf3, 0xcc, 0x60, 0x66,
	0xa3, 0x99, 0x64, 0x1b, 0x2e, 0xeb, 0xc8, 0xef, 0x54, 0xde, 0xff, 0xbf, 0x4a, 0xcf, 0xfb, 0x84,
	0x56, 0xef, 0x63, 0x07, 0x73, 0xa2, 0xf7, 0xf4, 0x89, 0x54, 0xfc, 0x1a, 0xae, 0x7e, 0x95, 0x90,
	0x1b, 0x98, 0x14, 0x58, 0x32, 0x51, 0x65, 0xa2, 0x88, 0xbc, 0xa9, 0x37, 0x9b, 0xa4, 0x57, 0x2e,
	0xb0, 0x2c, 0xc8, 0x7d, 0x18, 0x33, 0xa5, 0x6c, 0x66, 0xd4, 0x65, 0x02, 0xa6, 0xd4, 0xb2, 0x88,
	0xbf, 0xc0, 0x2d, 0x4b, 0x23, 0x8f, 0x00, 0x94, 0x16, 0x55, 0x2e, 0x14, 0x93, 0x75, 0xe4, 0x4d,
	0xfd, 0xd9, 0x24, 0x1d, 0x44, 0xc8, 0x12, 0x42, 0xc5, 0x75, 0x29, 0xea, 0x5a, 0x60, 0xe5, 0x86,
	0x78, 0x7b, 0xfe, 0xf4, 0x9c, 0x3d, 0x7b, 0x2a, 0x74, 0x75, 0xdc, 0x9f, 0x0e, 0x6b, 0xe3, 0x27,
	0x00, 0xbf, 0x0d, 0x90, 0x07, 0x30, 0xee, 0x47, 0xe6, 0x44, 0xfb, 0x55, 0x8c, 0x6e, 0x97, 0x33,
	0x4f, 0xee, 0x80, 0xbf, 0xe7, 0x6d, 0x6f, 0xca, 0xfe, 0x92, 0x0f, 0x10, 0x7c, 0x65, 0xb2, 0xe1,
	0x9d, 0x9d, 0x70, 0xfe, 0xfc, 0xa2, 0xf3, 0x4c, 0x1d, 0xe3, 0xe5, 0xe8, 0x85, 0x17, 0x7f, 0xf7,
	0xe0, 0xfa, 0xec, 0xf4, 0x4f, 0x34, 0xb0, 0xfe, 0xb3, 0x81, 0xcb, 0x2e, 0x94, 0x93, 0x18, 0xb4,
	0xb1, 0x58, 0x7c, 0x7e, 0xb3, 0x15, 0x66, 0xd7, 0x6c, 0x68, 0x8e, 0x65, 0xe2, 0x98, 0xc9, 0x5f,
	0xcc, 0xc4, 0x32, 0xbb, 0x5b, 0x7f, 0x64, 0xba, 0x37, 0x90, 0x75, 0x6f, 0x60, 0x33, 0xee, 0x3e,
	0xcf, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0x47, 0x7b, 0xdb, 0xb0, 0x51, 0x03, 0x00, 0x00,
}
